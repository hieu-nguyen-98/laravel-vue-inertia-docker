version: '3'
services:

  # Nginx Service
  nginx:
    build:
      context: .
      dockerfile: ./.docker/nginx/Dockerfile
    image:  ${PROJECT_NAME}_nginx:${APP_ENV}
    container_name: ${PROJECT_NAME}_nginx
    tty: true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - .:/var/www
      - ./.docker/nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - app-network

  # PHP Service
  php:
    build:
      context: .
      dockerfile: ./.docker/php/Dockerfile
    image:  ${PROJECT_NAME}_php:${APP_ENV}
    container_name: ${PROJECT_NAME}_php
    tty: true
    environment:
      SERVICE_NAME: php
      SERVICE_TAGS: dev
    working_dir: /var/www
    volumes:
      - .:/var/www
      - ./.docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app-network

  # MySQL Service
  mysql:
    build:
      context: .
      dockerfile: ./.docker/mysql/Dockerfile
    image:  ${PROJECT_NAME}_mysql:${APP_ENV}
    container_name: ${PROJECT_NAME}_mysql
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - database:/var/lib/mysql
    networks:
      - app-network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: ${PROJECT_NAME}_phpmyadmin
    environment:
      PMA_HOST: mysql
      PMA_USER: ${DB_USERNAME}
      PMA_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    ports:
      - "8081:80"  
    networks:
      - app-network
    depends_on:
      - mysql

  # Node Service
  node:
    build:
      context: .
      dockerfile: ./.docker/node/Dockerfile
    image:  ${PROJECT_NAME}_node:${APP_ENV}
    container_name: ${PROJECT_NAME}_node
    ports:
      - "5173:5173"
    volumes:
      - /var/www/node_modules
      - .:/var/www
    working_dir: /var/www
    networks:
      - app-network

  # Mailhog Service
  mailhog:
    build:
      context: .
      dockerfile: ./.docker/mailhog/Dockerfile
    image:  ${PROJECT_NAME}_mailhog:${APP_ENV}
    container_name: ${PROJECT_NAME}_mailhog
    ports:
      - 1025:1025
      - 8025:8025
    networks:
      - app-network

# Docker Networks
networks:
  app-network:
    driver: bridge

# Volumes
volumes:
  database:
    driver: local